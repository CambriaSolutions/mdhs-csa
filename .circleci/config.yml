version: 2.1
jobs:
  deploy_dialogflow_agent:
    docker:
      - image: circleci/node
    working_directory: ~/repo/
    parameters:
      jsonKey:
        description: "The key json object specified in the environment variables."
        type: string # string? "${DEV_MDHS_CSA_KEY_JSON}"
      env:
        type: string # e.g. dev,
      agentProject:
        type: string
      agentPrivateKey:
        type: string
      agentClientEmail:
        type: string
    steps:
      - checkout
      - restore_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - run: cd scripts && npm install
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - scripts/node_modules
      - run:
          name: "Add env variables"
          # TODO: Can we remove agent variables?
          # TODO: Whatever variables we keep, need to make env and proj part of it parameterized
          command: cd scripts && echo
            "AGENT_PROJECT=${<< parameters.agentProject >>}

            AGENT_PRIVATE_KEY=${<< parameters.agentPrivateKey >>}

            AGENT_CLIENT_EMAIL=${<< parameters.agentClientEmail >>}

            GOOGLE_APPLICATION_CREDENTIALS=./mdhs-key.json" > .env
      - run:
          name: "Create mdhs key file for scripts"
          command: cd scripts && echo "${<< parameters.jsonKey >>}" > mdhs-key.json
      - run:
          name: "Agent configuration"
          command: cd agent && mv agent.<< parameters.env >>.json agent.json
      - run:
          name: "Restore to << parameters.env >> Dialogflow"
          command: cd scripts && node restoreDialogflow
      - run:
          name: "Populate Firestore"
          command: cd scripts && node populateFirestore
  deploy_functions:
    docker:
      - image: circleci/node
    working_directory: ~/repo/
    parameters:
      jsonKey:
        description: "The key json object specified in the environment variables."
        type: string # string? "${DEV_MDHS_CSA_KEY_JSON}"
      env:
        type: string # e.g. dev
      firebaseProjectID:
        type: string # e.g. mdhs-csa-dev, mdhs-csa-isd-273818 (random number used for example)
      googleMapsKey:
        type: string
      serviceDeskKey:
        type: string
      serviceDeskURI:
        type: string
      serviceDeskID:
        type: string
      requestTypeID:
        type: string
      serviceDeskEnv:
        type: string
      analyticsURI:
        type: string
      autoMLProject:
        type: string
      autoMLLocation:
        type: string
      autoMLSMModel:
        type: string
      autoMLCatModel:
        type: string
      autoMLPrivateKey:
        type: string
      autoMLClientEmail:
        type: string
    steps:
      - checkout
      - restore_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - run: cd functions && npm install
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - functions/node_modules
      - run:
          name: "Add env variables to functions folder"
          command: cd functions && echo
            "GOOGLE_MAPS_KEY=${<< parameters.googleMapsKey >>}

            SERVICE_DESK_KEY=${<< parameters.serviceDeskKey >>}

            SERVICE_DESK_URI=${<< parameters.serviceDeskURI >>}

            SERVICE_DESK_ID=${<< parameters.serviceDeskID >>}

            REQUEST_TYPE_ID=${<< parameters.requestTypeID >>}

            SERVICE_DESK_ENV=${<< parameters.serviceDeskEnv >>}

            ANALYTICS_URI=${<< parameters.analyticsURI >>}

            AUTOML_PROJECT=${<< parameters.autoMLProject >>}

            AUTOML_LOCATION=${<< parameters.autoMLLocation >>}

            AUTOML_SM_MODEL=${<< parameters.autoMLSMModel >>}

            AUTOML_CAT_MODEL=${<< parameters.autoMLCatModel >>}

            AUTOML_PRIVATE_KEY=${<< parameters.autoMLPrivateKey >>}

            AUTOML_CLIENT_EMAIL=${<< parameters.autoMLClientEmail >>}" > .env

      - run: sudo npm install -g firebase-tools
      - run: firebase deploy -P ${<< parameters.firebaseProjectID >>} --only functions --token $FIREBASE_DEPLOY_TOKEN
workflows:
  version: 2
  build_deploy:
    jobs:
      - deploy_dialogflow_agent:
          jsonKey: DEV_MDHS_CSA_KEY_JSON
          env: dev
          agentProject: DEV_AGENT_PROJECT
          agentPrivateKey: DEV_AGENT_PRIVATE_KEY
          agentClientEmail: DEV_AGENT_CLIENT_EMAIL
          filters:
            branches:
              only:
                - development
      - deploy_functions:
          jsonKey: DEV_MDHS_CSA_KEY_JSON
          env: dev
          firebaseProjectID: DEV_FIREBASE_PROJECT_ID
          googleMapsKey: DEV_GOOGLE_MAPS_KEY
          serviceDeskKey: DEV_SERVICE_DESK_KEY
          serviceDeskURI: DEV_SERVICE_DESK_URI
          serviceDeskID: DEV_SERVICE_DESK_ID
          requestTypeID: DEV_REQUEST_TYPE_ID
          serviceDeskEnv: DEV_SERVICE_DESK_ENV
          analyticsURI: DEV_ANALYTICS_URI
          autoMLProject: DEV_AUTOML_PROJECT
          autoMLLocation: DEV_AUTOML_LOCATION
          autoMLSMModel: DEV_AUTOML_SM_MODEL
          autoMLCatModel: DEV_AUTOML_CAT_MODEL
          autoMLPrivateKey: DEV_AUTOML_PRIVATE_KEY
          autoMLClientEmail: DEV_AUTOML_CLIENT_EMAIL
          filters:
            branches:
              only:
                - development
      - deploy_dialogflow_agent:
          jsonKey: ISD_MDHS_CSA_KEY_JSON
          env: isd
          agentProject: ISD_AGENT_PROJECT
          agentPrivateKey: ISD_AGENT_PRIVATE_KEY
          agentClientEmail: ISD_AGENT_CLIENT_EMAIL
          filters:
            branches:
              only:
                - isd
      - deploy_functions:
          jsonKey: ISD_MDHS_CSA_KEY_JSON
          env: isd
          firebaseProjectID: ISD_FIREBASE_PROJECT_ID
          googleMapsKey: STAGE_GOOGLE_MAPS_KEY
          serviceDeskKey: DEV_SERVICE_DESK_KEY
          serviceDeskURI: DEV_SERVICE_DESK_URI
          serviceDeskID: DEV_SERVICE_DESK_ID
          requestTypeID: DEV_REQUEST_TYPE_ID
          serviceDeskEnv: DEV_SERVICE_DESK_ENV
          analyticsURI: ISD_ANALYTICS_URI
          autoMLProject: DEV_AUTOML_PROJECT
          autoMLLocation: DEV_AUTOML_LOCATION
          autoMLSMModel: DEV_AUTOML_SM_MODEL
          autoMLCatModel: DEV_AUTOML_CAT_MODEL
          autoMLPrivateKey: DEV_AUTOML_PRIVATE_KEY
          autoMLClientEmail: DEV_AUTOML_CLIENT_EMAIL
          filters:
            branches:
              only:
                - isd
      - deploy_dialogflow_agent:
          jsonKey: STAGE_MDHS_CSA_KEY_JSON
          env: stage
          agentProject: STAGE_AGENT_PROJECT
          agentPrivateKey: STAGE_AGENT_PRIVATE_KEY
          agentClientEmail: STAGE_AGENT_CLIENT_EMAIL
          filters:
            branches:
              only:
                - stage
      - deploy_functions:
          jsonKey: STAGE_MDHS_CSA_KEY_JSON
          env: stage
          firebaseProjectID: STAGE_FIREBASE_PROJECT_ID
          googleMapsKey: STAGE_GOOGLE_MAPS_KEY
          serviceDeskKey: STAGE_SERVICE_DESK_KEY
          serviceDeskURI: STAGE_SERVICE_DESK_URI
          serviceDeskID: STAGE_SERVICE_DESK_ID
          requestTypeID: STAGE_REQUEST_TYPE_ID
          serviceDeskEnv: STAGE_SERVICE_DESK_ENV
          analyticsURI: STAGE_ANALYTICS_URI
          autoMLProject: STAGE_AUTOML_PROJECT
          autoMLLocation: STAGE_AUTOML_LOCATION
          autoMLSMModel: STAGE_AUTOML_SM_MODEL
          autoMLCatModel: STAGE_AUTOML_CAT_MODEL
          autoMLPrivateKey: STAGE_AUTOML_PRIVATE_KEY
          autoMLClientEmail: STAGE_AUTOML_CLIENT_EMAIL
          filters:
            branches:
              only:
                - stage
      - deploy_dialogflow_agent:
          jsonKey: PROD_MDHS_CSA_KEY_JSON
          env: prod
          agentProject: PROD_AGENT_PROJECT
          agentPrivateKey: PROD_AGENT_PRIVATE_KEY
          agentClientEmail: PROD_AGENT_CLIENT_EMAIL
          filters:
            branches:
              only:
                - master
      - deploy_functions:
          jsonKey: PROD_MDHS_CSA_KEY_JSON
          env: prod
          firebaseProjectID: PROD_FIREBASE_PROJECT_ID
          googleMapsKey: PROD_GOOGLE_MAPS_KEY
          serviceDeskKey: PROD_SERVICE_DESK_KEY
          serviceDeskURI: PROD_SERVICE_DESK_URI
          serviceDeskID: PROD_SERVICE_DESK_ID
          requestTypeID: PROD_REQUEST_TYPE_ID
          serviceDeskEnv: PROD_SERVICE_DESK_ENV
          analyticsURI: PROD_ANALYTICS_URI
          autoMLProject: PROD_AUTOML_PROJECT
          autoMLLocation: PROD_AUTOML_LOCATION
          autoMLSMModel: PROD_AUTOML_SM_MODEL
          autoMLCatModel: PROD_AUTOML_CAT_MODEL
          autoMLPrivateKey: PROD_AUTOML_PRIVATE_KEY
          autoMLClientEmail: PROD_AUTOML_CLIENT_EMAIL
          filters:
            branches:
              only:
                - master
