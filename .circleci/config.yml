version: 2.1
jobs:
  deploy_dialogflow_agent:
    docker:
      - image: circleci/node:10.15.0
    working_directory: ~/repo/
    parameters:
      jsonKey:
        description: "The key json object specified in the environment variables."
        type: string # string? "${DEV_MDHS_CSA_KEY_JSON}"
      env:
        type: string # e.g. dev,
      project:
        type: string # e.g. csa, snap, dispatcher
    steps:
      - run:
          command: echo << parameters.env >> << parameters.project >>
      - checkout
      - restore_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - run: cd scripts && npm install
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - scripts/node_modules
      - run:
          name: "Add env variables"
          # TODO: Can we remove agent variables?
          # TODO: Whatever variables we keep, need to make env and proj part of it parameterized
          command: cd scripts && echo
            "AGENT_PROJECT=${DEV_AGENT_PROJECT}

            AGENT_PRIVATE_KEY=${DEV_AGENT_PRIVATE_KEY}

            AGENT_CLIENT_EMAIL=${DEV_AGENT_CLIENT_EMAIL}

            GOOGLE_APPLICATION_CREDENTIALS=./mdhs-key.json" > .env
      - run:
          name: "Add json key file"
          command: cd scripts && echo
            "<< parameters.jsonKey >>" > mdhs-key.json
      - run:
          name: "Agent configuration"
          command: cd agent && mv agent.<< parameters.env >>.json agent.json
      - run:
          name: "Restore to Dev Dialogflow"
          command: cd scripts && node restoreDialogflow
      - run:
          name: "Populate Firestore"
          command: cd scripts && node populateFirestore
  deploy_functions:
    docker:
      - image: circleci/node:10.15.0
    working_directory: ~/repo/
    parameters:
      jsonKey:
        description: "The key json object specified in the environment variables."
        type: string # string? "${DEV_MDHS_CSA_KEY_JSON}"
      env:
        type: string # e.g. dev,
      envCap:
        type: string
      project:
        type: string # e.g. csa, snap, dispatcher
      firebaseProjectID:
        type: string # e.g. mdhs-csa-dev, mdhs-csa-isd-273818 (random number used for example)
    steps:
      - run:
          name: "Test dynamic parameters"
          command: echo ${<< parameters.envCap >>_AUTOML_PROJECT}
      - checkout
      - restore_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - run: cd functions && npm install
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - functions/node_modules
      - run:
          name: "Add env variables and deploy"
          # TODO: What variables can we get rid of?
          # TODO: Whatever variables we keep, need to make env and proj part of it parameterized
          command: cd functions && echo
            "GOOGLE_MAPS_KEY=${DEV_GOOGLE_MAPS_KEY}

            SERVICE_DESK_KEY=${DEV_SERVICE_DESK_KEY}

            SERVICE_DESK_URI=${DEV_SERVICE_DESK_URI}

            SERVICE_DESK_ID=${DEV_SERVICE_DESK_ID}

            REQUEST_TYPE_ID=${DEV_REQUEST_TYPE_ID}

            SERVICE_DESK_ENV=${DEV_SERVICE_DESK_ENV}

            ANALYTICS_URI=${DEV_ANALYTICS_URI}

            AUTOML_PROJECT=${DEV_AUTOML_PROJECT}

            AUTOML_LOCATION=${DEV_AUTOML_LOCATION}

            AUTOML_SM_MODEL=${DEV_AUTOML_SM_MODEL}

            AUTOML_CAT_MODEL=${DEV_AUTOML_CAT_MODEL}

            AUTOML_PRIVATE_KEY=${DEV_AUTOML_PRIVATE_KEY}

            AUTOML_CLIENT_EMAIL=${DEV_AUTOML_CLIENT_EMAIL}" > .env
      - run:
          name: "Run geocode script"
          command: cd functions && node retrieveCoordinates
      - run: npm install -g firebase-tools
      - run: firebase deploy -P << parameters.firebaseProjectID >> --only functions --token $FIREBASE_DEPLOY_TOKEN
workflows:
  version: 2
  build_deploy:
    jobs:
      - deploy_dialogflow_agent:
          jsonKey: ${DEV_MDHS_CSA_KEY_JSON}
          env: "dev"
          project: "csa"
          filters:
            branches:
              only:
                - development
      - deploy_functions:
          jsonKey: ${DEV_MDHS_CSA_KEY_JSON}
          env: "dev"
          envCap: "DEV"
          project: "csa"
          firebaseProjectID: ${DEV_CSA_FIREBASE_PROJECT_ID}
          filters:
            branches:
              only:
                - development
      - deploy_dialogflow_agent:
          jsonKey: ${ISD_MDHS_CSA_KEY_JSON}
          env: "isd"
          project: "csa"
          filters:
            branches:
              only:
                - isd
      - deploy_functions:
          jsonKey: ${ISD_MDHS_CSA_KEY_JSON}
          env: "isd"
          envCap: "ISD"
          project: "csa"
          firebaseProjectID: ${ISD_FIREBASE_PROJECT_ID}
          filters:
            branches:
              only:
                - isd
      # - deploy_dev_snap_dialogflow_agent:
      #     filters:
      #       branches:
      #         only:
      #           - development
      # - deploy_dev_dispatcher_dialogflow_agent:
      #     filters:
      #       branches:
      #         only:
      #           - development
      # - deploy_dev_csa_functions:
      #     filters:
      #       branches:
      #         only:
      #           - development
      # - deploy_dev_snap_functions:
      #     filters:
      #       branches:
      #         only:
      #           - development
      # - deploy_dev_dispatcher_functions:
      #     filters:
      #       branches:
      #         only:
      #           - development
      # - deploy_isd_dialogflow_agent:
      #     filters:
      #       branches:
      #         only:
      #           - isd
      # - deploy_isd_functions:
      #     filters:
      #       branches:
      #         only:
      #           - isd
      # - deploy_stage_dialogflow_agent:
      #     filters:
      #       branches:
      #         only:
      #           - stage
      # - deploy_stage_functions:
      #     filters:
      #       branches:
      #         only:
      #           - stage
      # - deploy_prod_dialogflow_agent:
      #     filters:
      #       branches:
      #         only:
      #           - master
      # - deploy_prod_functions:
      #     filters:
      #       branches:
      #         only:
      #           - master
